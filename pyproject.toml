[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "microevents"
version = "0.1.1"
description = "Tiny sync+async event signals for Python."
readme = "README.md"
authors = [{name = "Pablo Viojo", email = "pviojo@gmail.com"}]
license = {text = "MIT"}
requires-python = ">=3.9"
keywords = ["events", "signals", "dispatcher", "pubsub", "asyncio"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Topic :: Software Development :: Libraries",
    "Topic :: Utilities",
]

[project.urls]
Homepage = "https://github.com/pviojo/microevents"
Repository = "https://github.com/pviojo/microevents"
Issues = "https://github.com/pviojo/microevents/issues"

[tool.setuptools]
package-dir = {"" = "src"}
packages = ["microevents"]

[dependency-groups]
dev = [
    "pytest>=8.3.5",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=5.0.0",
    "pre-commit>=3.6.0",
    "ruff>=0.3.0",
]

[tool.pytest.ini_options]
minversion = "8.0"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=microevents",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=90",
    "--strict-markers",
    "-v"
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src/microevents"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/site-packages/*"
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod"
]


[tool.setuptools.package-data]
microevents = ["py.typed"]

[tool.ruff]
line-length = 100
target-version = "py38"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
]
ignore = [
    "E501",  # line too long (handled by formatter)
]

[tool.ruff.lint.isort]
known-first-party = ["microevents"]
